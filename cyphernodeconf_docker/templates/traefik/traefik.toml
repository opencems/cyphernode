[global]
    checkNewVersion = false
    sendAnonymousUsage = false

# TODO: remove this later
[log]
    level = "TRACE"

# TODO: remove this later
[accessLog]

# TODO: remove this later
[api]
    insecure = true

# add entry points from which services will be accessible
[entryPoints]
    [entryPoints.web]
        address = ":<%= traefik_http_port %>"
    [entryPoints.websecure]
        address = ":<%= traefik_https_port %>"
    [entryPoints.onion]
        address = ":9876"

# add docker provider but do not auto expose all containers
[providers.docker]
    exposedByDefault = false
<% if (docker_mode === 'swarm') { -%>
    swarmMode = true
<% } -%>

# This file provider is used to read in the traefik.toml file
# so routers and middlewares are available. This is strange
[providers.file]
    filename = "/etc/traefik/traefik.toml"

# This router is only used to run the root-to-admin-redirect
# middleware. It does nothing else
[http.routers]
    [http.routers.redirect-to-https]
        entryPoints = ["web"]
        middlewares = ["https-redirect"]
        priority = 1
        rule = "HostRegexp(`{host:.+}`)"
        service = "noop@internal"

[http.routers.root-router]
        entrypoints = ["websecure","onion"]
        middlewares = ["root-to-admin-redirect@file"]
        priority = 2
        rule = "Path(`/`)"
        service = "noop@internal"

    [http.routers.auth-router]
        entrypoints = ["websecure","onion"]
        middlewares = ["forward-auth@file"]
        priority = 3
        rule = "Path(`/.+`)"
        service = "noop@internal"

# This middleware redirects requests to / to the admin interface
[http.middlewares]
    [http.middlewares.root-to-admin-redirect.redirectRegex]
        regex = "^(https{0,1}://[^/]+?)/{0,1}$"
        replacement = "${1}/admin/"
        permanent = true

    [http.middlewares.forward-auth.forwardauth]
        address = "http://cyphernodeadmin:3032/forwardauth"
        authResponseHeaders = ["X-Forwarded-User"]
        trustForwardHeader = true

    [http.middlewares.https-redirect.redirectScheme]
        scheme = "https"

# [acme]
# email = "letsencrypt@yourdomain.com"
# storage = "acme.json"
# entryPoint = "https"
# onHostRule = true
# [acme.httpChallenge]
# entryPoint = "http"
# [[acme.domains]]
#   main = "cyphernode.yourdomain.com"
